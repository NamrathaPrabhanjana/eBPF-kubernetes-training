
Basic Installation Steps
------------------------

- Download VMWare fusion for Mac M1
- Download Ubuntu Server 20.04 LTS (arm64) iso
- Install Ubuntu server iso on vmware fusion:
	- At least 100 GB hard disk space is recommended. 
	- Configure root credentials and also install minio, microk8s as part of the installation
- Reboot the system once the vm is installed
- From the cmdline, install Ubuntu desktop: sudo apt install ubuntu-desktop
- Reboot the system
- Now you have the familiar ubuntu GUI
- Use the terminal to install the rest of the packages:
  - Install microk8s
	  - sudo snap install microk8s --classic --channel=1.30
	  - sudo usermod -a -G microk8s $USER
	  - mkdir -p ~/.kube
	  - chmod 0i700 ~/.kube
	  - sudo chown -R namkalla ~/.kube
	  - newgrp microk8s
	  - microk8s status --wait-ready
	  - microk8s kubectl get nodes
	  - microk8s kubectl create deployment nginx --image=nginx
	  - microk8s enable dns
          - microk8s enable observability
	  - microk8s enable dashboard
	  - microk8s enable rbac
          - snap services: This lists all kube services running, including kubelite (that combines apiserver, scheduler, proxy, controller, kubelet)
- Install docker (should come with microk8s) and test that it works
	- sudo groupadd docker
        - sudo usermod -aG docker $USER
        - newgrp docker
        - docker run hello-world


Install BCC tools on the host vm (OPTIONAL - skip and proceed to create a reusable container instead)
------------------------------------------------------------------------------------------------------

- Install bcc tools: https://github.com/iovisor/bcc/blob/master/INSTALL.md#ubuntu---source
	- # For Focal (20.04.1 LTS)
	  sudo apt install -y zip bison build-essential cmake flex git libedit-dev \
  	  libllvm12 llvm-12-dev libclang-12-dev python zlib1g-dev libelf-dev libfl-dev python3-setuptools \
  	  liblzma-dev arping netperf iperf
	- git clone https://github.com/iovisor/bcc.git
	  mkdir bcc/build; cd bcc/build
	  cmake ..
	  make
	  sudo make install
	  cmake -DPYTHON_CMD=python3 .. # build python3 binding
	  pushd src/python/
	  make
	  sudo make install
	  popd
	- sudo apt install linux-tools-5.4.0-196-generic (for bpftool cmdline)
- Install net config tools
	- sudo apt install net-tools
    - sudo apt install conntrack
	- sudo apt install systemd



Base container with all eBPF dependencies
-------------------------------------------

- Use the Dockerfile in the root folder
- docker build . -t  ebpf-base-ctr:1.0
- docker save ebpf-base-ctr:1.0 > ebpf_base_ctr_1_0.tar
- microk8s ctr image import ebpf_base_ctr_1_0.tar
- microk8s ctr image ls


Test container 
--------------

Follow README in helloworld folder

Set up helper pods
-------------------

Follow README in additional-pods-setup folder

Sample traffic filter/blocker
----------------------------

Follow README in icmp-blocker-xdp folder


Run Queue latency detection
----------------------------

Follow README in runq-latency folder

Flow Tracer Setup
-----------------

Follow README in flow-tracing folder

Cilium Setup
------------

Follow README in cilium-setup folder


